%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 23 23 841 429
%%HiResBoundingBox: 23.500000 23.500000 841.000000 428.500000
%Produced by poppler pdftops version: 0.43.0 (http://poppler.freedesktop.org)
%%Creator: matplotlib 1.5.1, http://matplotlib.org
%%LanguageLevel: 2
%%DocumentMedia: 304x152mm 864 432 0 () ()
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-665 -325 2000 1006] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 26 dict def
CharProcs begin
/parenright {
333 0 61 -209 297 728 setcachedevice
q
124 -209 m
61 -209 l
158 -53 207 102 207 259 c
207 320 200 381 186 441 c
174 489 159 536 139 582 c
126 610 100 659 61 728 c
124 728 l
184 646 229 564 259 482 c
284 410 297 336 297 259 c
297 171 280 86 246 4 c
212 -77 172 -148 124 -209 c
f
Q
} def
/seven {
556 0 47 0 511 707 setcachedevice
q
47 622 m
47 707 l
511 707 l
511 638 l
465 589 419 524 375 444 c
330 364 295 281 271 197 c
253 137 242 71 238 0 c
147 0 l
148 56 159 124 180 204 c
201 284 231 361 271 435 c
311 509 353 571 398 622 c
47 622 l
f
Q
} def
/one {
556 0 109 0 373 719 setcachedevice
q
373 0 m
285 0 l
285 560 l
263 540 235 519 201 499 c
167 479 136 464 109 454 c
109 539 l
158 562 201 590 238 623 c
274 655 300 687 316 719 c
373 719 l
373 0 l
f
Q
} def
/four {
556 0 13 0 508 716 setcachedevice
q
323 0 m
323 171 l
13 171 l
13 252 l
339 716 l
411 716 l
411 252 l
508 252 l
508 171 l
411 171 l
411 0 l
323 0 l
323 252 m
323 575 l
99 252 l
323 252 l
f
Q
} def
/zero {
556 0 42 -11 508 719 setcachedevice
q
42 353 m
42 437 50 505 68 557 c
85 609 111 649 145 677 c
179 705 223 719 275 719 c
313 719 347 711 376 695 c
404 679 428 657 447 628 c
466 599 481 564 492 522 c
502 480 508 423 508 353 c
508 269 499 201 482 149 c
465 97 439 58 405 30 c
371 2 327 -11 275 -11 c
205 -11 151 13 112 62 c
65 121 42 218 42 353 c
132 353 m
132 235 145 157 173 118 c
200 79 234 60 275 60 c
315 60 348 79 376 118 c
404 157 418 235 418 353 c
418 471 404 549 376 588 c
348 626 314 646 274 646 c
233 646 201 629 177 595 c
147 551 132 470 132 353 c
f
Q
} def
/parenleft {
333 0 61 -209 297 728 setcachedevice
q
234 -209 m
185 -148 144 -77 111 4 c
77 86 61 171 61 259 c
61 336 73 410 98 482 c
127 564 172 646 234 728 c
297 728 l
257 660 231 611 219 583 c
199 538 183 491 172 442 c
158 381 151 320 151 259 c
151 102 199 -53 297 -209 c
234 -209 l
f
Q
} def
/space {
278 0 0 0 0 0 setcachedevice
q
Q
} def
/six {
556 0 38 -11 510 719 setcachedevice
q
498 541 m
410 534 l
402 568 391 593 377 609 c
353 633 323 646 289 646 c
261 646 236 638 215 623 c
187 603 166 573 150 535 c
134 496 125 441 125 369 c
146 401 172 424 203 440 c
233 456 265 464 299 464 c
357 464 407 442 448 399 c
489 356 510 300 510 232 c
510 187 500 145 481 107 c
461 68 435 39 401 19 c
367 -1 329 -11 286 -11 c
212 -11 153 15 107 69 c
61 122 38 211 38 335 c
38 473 63 573 114 637 c
158 691 218 719 294 719 c
350 719 397 703 433 671 c
469 639 490 596 498 541 c
139 232 m
139 202 145 173 158 145 c
170 117 188 96 212 82 c
235 67 259 60 285 60 c
321 60 353 75 380 105 c
406 135 420 175 420 227 c
420 276 406 315 380 344 c
354 372 321 387 281 387 c
241 387 208 372 180 344 c
152 315 139 278 139 232 c
f
Q
} def
/two {
556 0 29 0 503 719 setcachedevice
q
503 84 m
503 0 l
30 0 l
29 21 33 41 41 61 c
53 93 72 124 98 156 c
124 187 163 223 213 265 c
291 328 343 378 371 416 c
398 453 412 488 412 522 c
412 556 399 586 374 610 c
349 634 317 646 277 646 c
235 646 201 633 176 608 c
150 582 137 547 137 502 c
47 512 l
53 579 76 630 116 666 c
156 701 211 719 279 719 c
347 719 402 699 442 661 c
482 623 502 576 502 520 c
502 491 496 463 484 435 c
472 407 453 378 426 348 c
399 317 354 275 291 222 c
238 178 204 148 189 132 c
174 116 162 100 152 84 c
503 84 l
f
Q
} def
/three {
556 0 42 -12 511 719 setcachedevice
q
42 189 m
130 201 l
140 151 157 115 181 93 c
205 71 235 60 270 60 c
311 60 346 74 374 103 c
402 131 417 167 417 209 c
417 249 403 283 377 309 c
351 335 317 349 277 349 c
260 349 239 345 215 339 c
225 416 l
231 415 235 415 239 415 c
276 415 310 424 340 444 c
370 464 385 494 385 535 c
385 567 374 593 352 614 c
330 635 302 646 268 646 c
234 646 205 635 182 614 c
159 592 145 560 139 518 c
51 533 l
61 592 86 638 124 670 c
162 702 209 719 266 719 c
305 719 341 710 374 693 c
406 676 431 653 449 625 c
467 596 476 565 476 533 c
476 501 467 473 451 448 c
434 422 409 402 377 388 c
419 378 451 357 475 327 c
499 296 511 257 511 211 c
511 149 488 96 442 53 c
396 9 339 -12 270 -12 c
206 -12 154 6 113 44 c
71 81 48 129 42 189 c
f
Q
} def
/C {
722 0 50 -11 683 728 setcachedevice
q
588 251 m
683 227 l
663 149 627 89 575 49 c
523 9 460 -11 386 -11 c
309 -11 246 4 198 35 c
149 66 112 111 87 171 c
62 231 50 295 50 363 c
50 437 64 502 92 558 c
120 614 161 656 214 685 c
266 713 324 728 388 728 c
459 728 519 709 568 673 c
617 637 651 586 670 520 c
577 498 l
560 550 536 587 505 611 c
473 635 434 647 386 647 c
330 647 284 633 247 607 c
210 581 184 545 169 501 c
154 457 147 411 147 364 c
147 302 156 249 174 204 c
192 158 219 124 257 102 c
294 80 334 69 378 69 c
431 69 476 84 513 115 c
549 145 574 191 588 251 c
f
Q
} def
/B {
667 0 73 0 614 716 setcachedevice
q
73 0 m
73 716 l
342 716 l
396 716 440 708 473 694 c
506 679 532 657 551 627 c
569 597 579 565 579 533 c
579 502 570 473 554 446 c
537 419 512 397 479 381 c
522 368 555 346 579 316 c
602 285 614 249 614 208 c
614 174 606 142 592 114 c
578 85 560 63 540 47 c
519 31 493 20 462 12 c
430 4 392 0 346 0 c
73 0 l
168 415 m
323 415 l
365 415 395 417 413 423 c
437 430 455 442 467 459 c
479 475 486 496 486 521 c
486 545 480 566 469 584 c
457 602 441 614 420 621 c
398 627 362 631 311 631 c
168 631 l
168 415 l
168 84 m
346 84 l
376 84 398 85 411 88 c
432 92 450 98 465 107 c
479 116 491 129 501 147 c
511 164 516 184 516 208 c
516 234 509 257 495 277 c
481 297 462 311 438 319 c
414 327 379 331 333 331 c
168 331 l
168 84 l
f
Q
} def
/S {
667 0 45 -11 615 728 setcachedevice
q
45 230 m
134 238 l
138 202 148 172 164 149 c
179 126 203 108 236 94 c
268 80 305 73 346 73 c
382 73 413 78 441 89 c
469 99 489 114 503 133 c
516 151 523 172 523 194 c
523 216 516 236 503 253 c
490 269 469 283 439 295 c
420 303 378 314 312 330 c
246 346 200 361 174 375 c
140 393 114 415 97 441 c
80 467 72 497 72 531 c
72 567 82 600 103 632 c
123 663 153 687 193 703 c
232 719 276 728 324 728 c
377 728 424 719 464 702 c
504 685 536 660 558 627 c
580 593 591 556 593 514 c
502 507 l
497 552 481 586 453 610 c
425 633 383 645 328 645 c
270 645 229 634 203 613 c
177 592 164 567 164 537 c
164 511 173 490 191 474 c
209 457 257 440 334 422 c
411 404 464 389 493 377 c
534 357 565 333 585 304 c
605 274 615 240 615 202 c
615 164 604 128 582 94 c
560 60 528 34 488 16 c
447 -2 401 -11 350 -11 c
285 -11 231 -2 187 16 c
143 34 109 63 84 101 c
59 139 46 182 45 230 c
f
Q
} def
/five {
556 0 42 -11 516 706 setcachedevice
q
42 188 m
134 195 l
140 150 156 116 181 94 c
206 71 236 60 271 60 c
313 60 349 76 379 108 c
408 140 423 182 423 235 c
423 285 408 324 380 353 c
352 382 315 397 270 397 c
242 397 216 390 193 377 c
170 364 152 348 140 328 c
57 338 l
126 706 l
482 706 l
482 622 l
197 622 l
158 430 l
201 460 246 475 293 475 c
355 475 408 453 451 410 c
494 366 516 311 516 243 c
516 178 497 122 459 75 c
413 17 351 -11 271 -11 c
206 -11 153 7 112 43 c
70 79 47 127 42 188 c
f
Q
} def
/underscore {
556 0 -14 -198 567 -134 setcachedevice
q
-14 -198 581 64 re
f
Q
} def
/c {
500 0 39 -11 491 530 setcachedevice
q
404 190 m
491 179 l
481 119 457 72 418 39 c
379 5 331 -11 275 -11 c
203 -11 146 12 103 58 c
60 104 39 170 39 257 c
39 313 48 362 67 404 c
85 446 113 477 151 498 c
189 519 230 530 275 530 c
331 530 377 515 413 487 c
449 459 472 418 482 366 c
397 353 l
389 387 374 413 354 431 c
333 449 308 458 279 458 c
234 458 198 442 170 410 c
142 378 129 328 129 260 c
129 190 142 139 169 108 c
195 76 230 61 274 61 c
308 61 337 71 360 92 c
383 113 398 146 404 190 c
f
Q
} def
/e {
556 0 37 -11 515 530 setcachedevice
q
421 167 m
512 156 l
497 102 470 61 432 32 c
393 3 344 -11 284 -11 c
208 -11 147 12 103 58 c
59 104 37 170 37 255 c
37 342 59 410 104 458 c
148 506 207 530 279 530 c
348 530 405 506 449 459 c
493 412 515 346 515 260 c
515 254 514 247 514 237 c
127 237 l
130 179 146 136 175 106 c
204 76 240 61 284 61 c
316 61 344 69 367 86 c
389 102 407 129 421 167 c
132 309 m
422 309 l
418 353 407 385 389 407 c
361 441 324 458 280 458 c
239 458 205 444 178 417 c
150 390 135 354 132 309 c
f
Q
} def
/i {
222 0 66 0 154 716 setcachedevice
q
66 615 m
66 716 l
154 716 l
154 615 l
66 615 l
66 0 m
66 519 l
154 519 l
154 0 l
66 0 l
f
Q
} def
/l {
222 0 64 0 152 716 setcachedevice
q
64 0 88 716 re
f
Q
} def
/o {
556 0 33 -11 519 530 setcachedevice
q
33 259 m
33 355 59 426 113 473 c
157 511 212 530 276 530 c
347 530 405 506 451 460 c
496 413 519 349 519 267 c
519 200 509 147 489 109 c
469 71 439 41 401 20 c
363 0 321 -11 276 -11 c
203 -11 144 12 100 58 c
55 104 33 171 33 259 c
124 259 m
124 193 138 143 167 110 c
195 77 232 61 276 61 c
320 61 356 77 385 110 c
414 143 429 194 429 262 c
429 326 414 374 385 408 c
355 441 319 458 276 458 c
232 458 195 441 167 408 c
138 375 124 325 124 259 c
f
Q
} def
/n {
556 0 66 0 487 530 setcachedevice
q
66 0 m
66 519 l
145 519 l
145 445 l
183 501 238 530 310 530 c
341 530 370 524 396 513 c
422 502 442 487 455 469 c
468 451 477 429 482 404 c
485 388 487 359 487 319 c
487 0 l
399 0 l
399 315 l
399 351 395 377 389 395 c
382 413 370 427 353 438 c
335 448 315 454 292 454 c
254 454 221 442 194 418 c
167 394 154 349 154 283 c
154 0 l
66 0 l
f
Q
} def
/s {
500 0 31 -11 461 530 setcachedevice
q
31 155 m
118 168 l
122 133 136 106 158 88 c
180 70 212 61 252 61 c
292 61 322 69 342 85 c
361 101 371 121 371 143 c
371 163 362 178 345 190 c
333 198 303 208 255 220 c
191 236 146 250 121 262 c
96 274 77 290 64 311 c
51 332 45 355 45 381 c
45 404 50 425 61 445 c
71 465 86 481 104 494 c
118 504 136 512 160 519 c
184 526 209 530 236 530 c
276 530 312 524 343 512 c
374 500 397 485 412 465 c
426 445 436 418 442 385 c
356 373 l
352 399 340 420 322 435 c
303 450 277 458 243 458 c
202 458 173 451 156 438 c
138 424 130 409 130 391 c
130 379 133 369 141 360 c
148 350 159 343 175 337 c
183 333 209 326 252 314 c
314 298 358 284 382 274 c
406 263 426 247 440 227 c
454 207 461 182 461 152 c
461 122 452 95 435 69 c
418 43 393 24 361 10 c
329 -4 292 -11 252 -11 c
184 -11 133 2 98 30 c
62 58 40 99 31 155 c
f
Q
} def
/r {
333 0 65 0 347 530 setcachedevice
q
65 0 m
65 519 l
144 519 l
144 440 l
164 476 182 500 200 512 c
217 524 236 530 256 530 c
286 530 316 520 347 502 c
316 420 l
294 432 273 439 252 439 c
232 439 215 433 200 422 c
184 410 173 394 167 374 c
157 342 153 308 153 271 c
153 0 l
65 0 l
f
Q
} def
/u {
556 0 64 -11 484 519 setcachedevice
q
406 0 m
406 76 l
365 18 310 -11 241 -11 c
210 -11 181 -5 155 6 c
129 17 109 32 96 50 c
83 68 74 89 69 115 c
65 132 64 159 64 197 c
64 519 l
152 519 l
152 231 l
152 185 153 154 157 138 c
163 115 174 97 192 84 c
210 70 232 64 259 64 c
285 64 309 70 333 84 c
356 97 372 115 382 139 c
391 162 396 196 396 241 c
396 519 l
484 519 l
484 0 l
406 0 l
f
Q
} def
/t {
278 0 18 -6 271 700 setcachedevice
q
258 79 m
271 1 l
245 -3 223 -6 204 -6 c
172 -6 147 -1 130 8 c
112 18 100 31 93 48 c
85 64 82 99 82 152 c
82 450 l
18 450 l
18 519 l
82 519 l
82 647 l
169 700 l
169 519 l
258 519 l
258 450 l
169 450 l
169 147 l
169 121 170 105 174 98 c
177 91 182 85 189 81 c
196 77 206 75 219 75 c
229 75 242 76 258 79 c
f
Q
} def
/z {
500 0 20 0 479 519 setcachedevice
q
20 0 m
20 71 l
350 450 l
312 448 278 447 250 447 c
39 447 l
39 519 l
463 519 l
463 460 l
182 131 l
128 71 l
167 74 204 76 239 76 c
479 76 l
479 0 l
20 0 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
false pdfSetup
%%EndSetup
%%Page: 1 1
%%PageMedia: 304x152mm
%%PageBoundingBox: 0 0 864 432
%%PageOrientation: Portrait
%%BeginPageSetup
864 432 pdfSetupPaper
pdfStartPage
0 0 864 432 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 864 432 re
f
/DeviceRGB {} cs
[0.9176 0.9176 0.949] sc
/DeviceGray {} CS
[0] SC
/DeviceRGB {} cs
[0.9176 0.9176 0.949] sc
93.378 70.512375 747.294 329.609625 re
f
/DeviceGray {} cs
[0.15] sc
1 j
1 w
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
155.6525 70.512375 m
155.6525 70.512375 l
f
155.6525 70.512375 m
155.6525 70.512375 l
S
155.6525 400.122 m
155.6525 400.122 l
f
155.6525 400.122 m
155.6525 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
150.644687 50.62175 Td
/F14_0 18 Tf
(1)
[10.008
0] Tj
280.2015 70.512375 m
280.2015 70.512375 l
f
280.2015 70.512375 m
280.2015 70.512375 l
S
280.2015 400.122 m
280.2015 400.122 l
f
280.2015 400.122 m
280.2015 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
275.193688 50.62175 Td
/F14_0 18 Tf
(2)
[10.008
0] Tj
404.7505 70.512375 m
404.7505 70.512375 l
f
404.7505 70.512375 m
404.7505 70.512375 l
S
404.7505 400.122 m
404.7505 400.122 l
f
404.7505 400.122 m
404.7505 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
399.742688 50.62175 Td
/F14_0 18 Tf
(3)
[10.008
0] Tj
529.2995 70.512375 m
529.2995 70.512375 l
f
529.2995 70.512375 m
529.2995 70.512375 l
S
529.2995 400.122 m
529.2995 400.122 l
f
529.2995 400.122 m
529.2995 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
524.291688 50.62175 Td
/F14_0 18 Tf
(4)
[10.008
0] Tj
653.8485 70.512375 m
653.8485 70.512375 l
f
653.8485 70.512375 m
653.8485 70.512375 l
S
653.8485 400.122 m
653.8485 400.122 l
f
653.8485 400.122 m
653.8485 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
648.840688 50.62175 Td
/F14_0 18 Tf
(5)
[10.008
0] Tj
778.3975 70.512375 m
778.3975 70.512375 l
f
778.3975 70.512375 m
778.3975 70.512375 l
S
778.3975 400.122 m
778.3975 400.122 l
f
778.3975 400.122 m
778.3975 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
773.389688 50.62175 Td
/F14_0 18 Tf
(6)
[10.008
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
414.884375 27.731125 Td
/F14_0 19.8 Tf
(cluster_size)
[9.9
0
4.3956
0
11.0088
0
9.9
0
5.5044
0
11.0088
0
6.5934
0
11.0088
0
9.9
0
4.3956
0
9.9
0
11.0088
0] Tj
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 70.512375 m
840.672 70.512375 l
S
Q
q
93.378 70.512375 m
93.378 70.512375 l
f
93.378 70.512375 m
93.378 70.512375 l
S
840.672 70.512375 m
840.672 70.512375 l
f
840.672 70.512375 m
840.672 70.512375 l
S
[1 0 0 1 0 0] Tm
0 0 Td
76.362375 65.856125 Td
/F14_0 18 Tf
(0)
[10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 117.599464 m
840.672 117.599464 l
S
Q
q
93.378 117.599464 m
93.378 117.599464 l
f
93.378 117.599464 m
93.378 117.599464 l
S
840.672 117.599464 m
840.672 117.599464 l
f
840.672 117.599464 m
840.672 117.599464 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 112.943214 Td
/F14_0 18 Tf
(1000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 164.686554 m
840.672 164.686554 l
S
Q
q
93.378 164.686554 m
93.378 164.686554 l
f
93.378 164.686554 m
93.378 164.686554 l
S
840.672 164.686554 m
840.672 164.686554 l
f
840.672 164.686554 m
840.672 164.686554 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 160.030304 Td
/F14_0 18 Tf
(2000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 211.773643 m
840.672 211.773643 l
S
Q
q
93.378 211.773643 m
93.378 211.773643 l
f
93.378 211.773643 m
93.378 211.773643 l
S
840.672 211.773643 m
840.672 211.773643 l
f
840.672 211.773643 m
840.672 211.773643 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 207.117393 Td
/F14_0 18 Tf
(3000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 258.860732 m
840.672 258.860732 l
S
Q
q
93.378 258.860732 m
93.378 258.860732 l
f
93.378 258.860732 m
93.378 258.860732 l
S
840.672 258.860732 m
840.672 258.860732 l
f
840.672 258.860732 m
840.672 258.860732 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 254.204482 Td
/F14_0 18 Tf
(4000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 305.947821 m
840.672 305.947821 l
S
Q
q
93.378 305.947821 m
93.378 305.947821 l
f
93.378 305.947821 m
93.378 305.947821 l
S
840.672 305.947821 m
840.672 305.947821 l
f
840.672 305.947821 m
840.672 305.947821 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 301.291571 Td
/F14_0 18 Tf
(5000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 353.034911 m
840.672 353.034911 l
S
Q
q
93.378 353.034911 m
93.378 353.034911 l
f
93.378 353.034911 m
93.378 353.034911 l
S
840.672 353.034911 m
840.672 353.034911 l
f
840.672 353.034911 m
840.672 353.034911 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 348.378661 Td
/F14_0 18 Tf
(6000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
1 J
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
93.378 400.122 m
840.672 400.122 l
S
Q
q
93.378 400.122 m
93.378 400.122 l
f
93.378 400.122 m
93.378 400.122 l
S
840.672 400.122 m
840.672 400.122 l
f
840.672 400.122 m
840.672 400.122 l
S
[1 0 0 1 0 0] Tm
0 0 Td
46.3155 395.46575 Td
/F14_0 18 Tf
(7000)
[10.008
0
10.008
0
10.008
0
10.008
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 37.34675 211.160938] Tm
0 0 Td
0 0 Td
/F14_0 19.8 Tf
(count)
[9.9
0
11.0088
0
11.0088
0
11.0088
0
5.5044
0] Tj
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
105.8329 70.512375 33.213067 290.951125 re
f
105.8329 70.512375 33.213067 290.951125 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
230.3819 70.512375 33.213067 25.474115 re
f
230.3819 70.512375 33.213067 25.474115 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
354.9309 70.512375 33.213067 3.672793 re
f
354.9309 70.512375 33.213067 3.672793 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
479.4799 70.512375 33.213067 0.565045 re
f
479.4799 70.512375 33.213067 0.565045 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
604.0289 70.512375 33.213067 0.094174 re
f
604.0289 70.512375 33.213067 0.094174 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
139.045967 70.512375 33.213066 292.081215 re
f
139.045967 70.512375 33.213066 292.081215 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
263.594967 70.512375 33.213066 25.191593 re
f
263.594967 70.512375 33.213066 25.191593 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
388.143967 70.512375 33.213066 3.814054 re
f
388.143967 70.512375 33.213066 3.814054 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
512.692967 70.512375 33.213066 0.612132 re
f
512.692967 70.512375 33.213066 0.612132 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
637.241967 70.512375 33.213066 0.047087 re
f
637.241967 70.512375 33.213066 0.047087 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
761.790967 70.512375 33.213066 0.047087 re
f
761.790967 70.512375 33.213066 0.047087 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
172.259033 70.512375 33.213067 281.722055 re
f
172.259033 70.512375 33.213067 281.722055 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
296.808033 70.512375 33.213067 22.790151 re
f
296.808033 70.512375 33.213067 22.790151 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
421.357033 70.512375 33.213067 3.39027 re
f
421.357033 70.512375 33.213067 3.39027 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
545.906033 70.512375 33.213067 0.800481 re
f
545.906033 70.512375 33.213067 0.800481 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
670.455033 70.512375 33.213067 0.047087 re
f
670.455033 70.512375 33.213067 0.047087 re
S
Q
q
93.378 70.512375 747.294 329.609625 re
W
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
Q
q
2 J
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceRGB {} cs
[0 0 0] sc
0 J
/DeviceGray {} cs
[0.15] sc
1 j
1 w
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
323.876563 405.122 Td
/F14_0 32 Tf
(Cluster Sizes \(Beer\))
[23.104
0
7.104
0
17.792
0
16
0
8.896
0
17.792
0
10.656
0
8.896
0
21.344
0
7.104
0
16
0
17.792
0
16
0
8.896
0
10.656
0
21.344
0
17.792
0
17.792
0
10.656
0
10.656
0] Tj
/DeviceGray {} cs
[1] sc
0 j
0.3 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
703.8095 309.31575 127.8625 81.80625 re
f
703.8095 309.31575 127.8625 81.80625 re
S
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.347 0.4588 0.6412] sc
711.0095 371.031375 36 12.6 re
f
711.0095 371.031375 36 12.6 re
S
/DeviceGray {} cs
[0.15] sc
1 j
1 w
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
761.4095 371.031375 Td
/F14_0 18 Tf
(Beer 01)
[12.006
0
10.008
0
10.008
0
5.994
0
5.004
0
10.008
0
10.008
0] Tj
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.374 0.6181 0.4299] sc
711.0095 345.562625 36 12.6 re
f
711.0095 345.562625 36 12.6 re
S
/DeviceGray {} cs
[0.15] sc
1 j
1 w
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
761.4095 345.562625 Td
/F14_0 18 Tf
(Beer 02)
[12.006
0
10.008
0
10.008
0
5.994
0
5.004
0
10.008
0
10.008
0] Tj
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
0 j
0.3 w
/DeviceGray {} CS
[0.1] SC
/DeviceRGB {} cs
[0.7108 0.3637 0.3755] sc
711.0095 320.093875 36 12.6 re
f
711.0095 320.093875 36 12.6 re
S
/DeviceGray {} cs
[0.15] sc
1 j
1 w
/DeviceGray {} CS
[0.15] SC
/DeviceGray {} cs
[0.15] sc
[1 0 0 1 0 0] Tm
0 0 Td
761.4095 320.093875 Td
/F14_0 18 Tf
(Beer 03)
[12.006
0
10.008
0
10.008
0
5.994
0
5.004
0
10.008
0
10.008
0] Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
